// <auto-generated />
using System;
using AgendaMatic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendaMatic.Migrations
{
    [DbContext(typeof(AgendaMaticContext))]
    partial class AgendaMaticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgendaMatic.Data.AmBloque", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Bloque")
                        .HasColumnType("bigint")
                        .HasColumnName("BLOQUE");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("ESTADO");

                    b.Property<TimeSpan?>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("HORA");

                    b.Property<string>("Limite")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("LIMITE");

                    b.HasKey("Id");

                    b.ToTable("AM_BLOQUE");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmCitum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA");

                    b.Property<long?>("IdBloque")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_BLOQUE");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id");

                    b.HasIndex("IdBloque");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AM_CITA");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA");

                    b.Property<long?>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Mensaje")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MENSAJE");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AM_LOG");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmParticipante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("IdAmCita")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdAmCitaNavigationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdAmUsuario")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdAmUsuarioNavigationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdAmCitaNavigationId");

                    b.HasIndex("IdAmUsuarioNavigationId");

                    b.ToTable("AmParticipantes");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("APELLIDO");

                    b.Property<string>("Contrasena")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CONTRASENA");

                    b.Property<string>("Correo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CORREO");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id");

                    b.ToTable("AM_USUARIO");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmCitum", b =>
                {
                    b.HasOne("AgendaMatic.Data.AmBloque", "IdBloqueNavigation")
                        .WithMany("AmCita")
                        .HasForeignKey("IdBloque")
                        .HasConstraintName("FK_AM_CITA_AM_BLOQUE");

                    b.HasOne("AgendaMatic.Data.AmUsuario", "IdUsuarioNavigation")
                        .WithMany("AmCita")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_AM_CITA_AM_USUARIO");

                    b.Navigation("IdBloqueNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmLog", b =>
                {
                    b.HasOne("AgendaMatic.Data.AmUsuario", "IdUsuarioNavigation")
                        .WithMany("AmLogs")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_AM_LOG_AM_USUARIO");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmParticipante", b =>
                {
                    b.HasOne("AgendaMatic.Data.AmCitum", "IdAmCitaNavigation")
                        .WithMany()
                        .HasForeignKey("IdAmCitaNavigationId");

                    b.HasOne("AgendaMatic.Data.AmUsuario", "IdAmUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdAmUsuarioNavigationId");

                    b.Navigation("IdAmCitaNavigation");

                    b.Navigation("IdAmUsuarioNavigation");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmBloque", b =>
                {
                    b.Navigation("AmCita");
                });

            modelBuilder.Entity("AgendaMatic.Data.AmUsuario", b =>
                {
                    b.Navigation("AmCita");

                    b.Navigation("AmLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
